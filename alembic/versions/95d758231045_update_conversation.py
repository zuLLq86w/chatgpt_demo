"""update_conversation

Revision ID: 95d758231045
Revises: 545bd4214399
Create Date: 2025-10-25 01:06:40.354657

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '95d758231045'
down_revision: Union[str, Sequence[str], None] = '545bd4214399'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('conversation_tag_rel_ibfk_2'), 'conversation_tag_rel', type_='foreignkey')
    op.drop_constraint(op.f('conversation_tag_rel_ibfk_1'), 'conversation_tag_rel', type_='foreignkey')
    op.create_foreign_key(None, 'conversation_tag_rel', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'conversation_tag_rel', 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')
    op.add_column('conversations', sa.Column('group_id', sa.String(length=36), nullable=True))
    op.alter_column('conversations', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.create_foreign_key(None, 'conversations', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'conversations', type_='foreignkey')
    op.alter_column('conversations', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.drop_column('conversations', 'group_id')
    op.drop_constraint(None, 'conversation_tag_rel', type_='foreignkey')
    op.drop_constraint(None, 'conversation_tag_rel', type_='foreignkey')
    op.create_foreign_key(op.f('conversation_tag_rel_ibfk_1'), 'conversation_tag_rel', 'conversations', ['conversation_id'], ['id'])
    op.create_foreign_key(op.f('conversation_tag_rel_ibfk_2'), 'conversation_tag_rel', 'tags', ['tag_id'], ['id'])
    # ### end Alembic commands ###
